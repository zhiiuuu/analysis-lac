<?xml version="1.0" encoding="UTF-8"?>
<!-- POM 文件头部，定义项目的 schema 和命名空间 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- 项目基本信息 -->
    <name>elasticsearch-analysis-lac</name>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.elasticsearch</groupId>
    <artifactId>elasticsearch-analysis-lac</artifactId>
    <version>8.12.2</version>
    <packaging>jar</packaging>
    <description>LAC Analyzer for Elasticsearch</description>
    <inceptionYear>2025</inceptionYear>

    <!-- 项目属性（变量）定义，用于后续引用 -->
    <properties>
        <!-- Elasticsearch 版本号 -->
        <elasticsearch.version>8.12.2</elasticsearch.version>

        <!-- 编译目标 Java 版本 -->
        <maven.compiler.target>17</maven.compiler.target>

        <!-- plugin.xml 路径，用于 assembly 插件打包 -->
        <elasticsearch.assembly.descriptor>${project.basedir}/src/main/assemblies/plugin.xml
        </elasticsearch.assembly.descriptor>

        <!-- 插件名称和主类，用于 plugin-descriptor.properties 替换 -->
        <elasticsearch.plugin.name>analysis-lac</elasticsearch.plugin.name>
        <elasticsearch.plugin.classname>org.elasticsearch.plugin.analysis.lac.AnalysisLacPlugin
        </elasticsearch.plugin.classname>
        <elasticsearch.plugin.jvm>true</elasticsearch.plugin.jvm>

        <!-- 编码格式 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- 第三方依赖版本 -->
        <okhttp.version>4.10.0</okhttp.version>
        <jackson.version>2.17.2</jackson.version>
        <slf4j.version>2.0.6</slf4j.version>
        <log4j.version>2.19.0</log4j.version>
    </properties>

    <!-- 项目依赖 -->
    <dependencies>
        <!-- Elasticsearch 主库，scope 为 provided 表示运行环境会提供，不打入插件包 -->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- okhttp 用于调用 LAC 分词 HTTP 接口 -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>
    </dependencies>

    <!-- 项目构建配置 -->
    <build>
        <plugins>
            <!-- ✅ 插件一：maven-resources-plugin（用于预处理 plugin-descriptor.properties） -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-filtered-plugin-descriptor</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/filtered-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <!-- 需要过滤变量的资源文件 -->
                                        <include>plugin-descriptor.properties</include>
                                        <include>plugin-security.policy</include>
                                    </includes>
                                    <filtering>true</filtering> <!-- 启用 ${} 变量替换 -->
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ✅ 插件二：编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${maven.compiler.target}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- ✅ 插件三：测试插件（非必须） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- ✅ 插件四：源码插件（生成 -sources.jar） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- ✅ 插件五：打包成 zip 插件（ES 插件必须是 zip 包） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>

                <configuration>
                    <!-- 不追加 -bin 等后缀 -->
                    <appendAssemblyId>false</appendAssemblyId>

                    <!-- zip 包输出目录 -->
                    <outputDirectory>${project.build.directory}/releases/</outputDirectory>

                    <!-- 使用 plugin.xml 来描述 zip 内容 -->
                    <descriptors>
                        <descriptor>${basedir}/src/main/assemblies/plugin.xml</descriptor>
                    </descriptors>

                    <!-- 可选：manifest 主类信息（对 ES 插件无实际影响） -->
                    <archive>
                        <manifest>
                            <mainClass>fully.qualified.MainClass</mainClass>
                        </manifest>
                    </archive>
                </configuration>

                <executions>
                    <execution>
                        <phase>package</phase> <!-- 在 package 阶段执行 -->
                        <goals>
                            <goal>single</goal> <!-- 生成一个 zip 包 -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
